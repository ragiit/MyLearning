@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using MyBlazor.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@* @inject IJSRuntime JSRuntime // Inject JSRuntime untuk notifikasi Toastr *@

<PageTitle>Login Akun</PageTitle>

<div class="container mt-5 mb-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <div class="card-header bg-dark text-white text-center py-4 rounded-top-lg">
                    <h3 class="fw-light my-2">
                        <i class="bi bi-box-arrow-in-right me-2"></i> Masuk ke Akun Anda
                    </h3>
                </div>
                <div class="card-body p-4">
                    @* Toastr akan menggantikan StatusMessage untuk pesan error/sukses *@
                    @* <StatusMessage Message="@errorMessage" /> *@

                    <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger small mb-3" role="alert" />

                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="nama@email.com" />
                            <label for="Input.Email">Email</label>
                            <ValidationMessage For="() => Input.Email" class="text-danger small" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="kata sandi" />
                            <label for="Input.Password">Password</label>
                            <ValidationMessage For="() => Input.Password" class="text-danger small" />
                        </div>

                        <div class="form-check mb-3">
                            @* Gunakan form-check untuk checkbox modern *@
                            <InputCheckbox @bind-Value="Input.RememberMe" id="Input.RememberMe" class="form-check-input" />
                            <label class="form-check-label" for="Input.RememberMe">
                                Ingat saya
                            </label>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-box-arrow-in-right me-2"></i> Login
                            </button>
                        </div>

                        <div class="text-center">
                            <p class="mb-2">
                                <a href="Account/ForgotPassword" class="small">Lupa password Anda?</a>
                            </p>
                            <p class="mb-2">
                                <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))" class="small">Daftar sebagai pengguna baru</a>
                            </p>
                            <p>
                                <a href="Account/ResendEmailConfirmation" class="small">Kirim ulang konfirmasi email</a>
                            </p>
                        </div>
                    </EditForm>
                </div>
                <div class="card-footer text-center py-3 bg-light rounded-bottom-lg">
                    <div class="small">
                        @* Section for external logins if any *@
                        <ExternalLoginPicker /> @* Pastikan komponen ExternalLoginPicker Anda memiliki styling modern *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? errorMessage; // Akan diisi oleh hasil login, lalu ditampilkan oleh Toastr

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        errorMessage = null; // Reset error message

        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            // await JSRuntime.InvokeVoidAsync("showToastr", "success", "Anda berhasil login!");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.RequiresTwoFactor)
        {
            // await JSRuntime.InvokeVoidAsync("showToastr", "info", "Verifikasi dua faktor diperlukan.");
            RedirectManager.RedirectTo(
                "Account/LoginWith2fa",
                new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            // await JSRuntime.InvokeVoidAsync("showToastr", "error", "Akun Anda terkunci.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            errorMessage = "Upaya login tidak valid. Periksa email dan password Anda.";
            // await JSRuntime.InvokeVoidAsync("showToastr", "error", errorMessage);
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Email wajib diisi.")]
        [EmailAddress(ErrorMessage = "Format email tidak valid.")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Password wajib diisi.")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}