 

@page "/order/confirmation/{OrderId:int}" 
@inject MyBlazor.Repository.IRepository.IOrderRepository OrderRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using MyBlazor.Data
@using System.Globalization

<PageTitle>Konfirmasi Pesanan Anda</PageTitle>

<div class="container mt-4">
    <div class="card shadow-lg border-0 rounded-lg">
        <div class="card-header bg-success text-white text-center py-4 rounded-top-lg">
            <h3 class="fw-light my-2">
                <i class="bi bi-check-circle-fill me-2"></i> Pesanan Berhasil Dibayar!
            </h3>
            <p class="mb-0">Terima kasih atas pesanan Anda. Detail pesanan Anda di bawah ini.</p>
        </div>
        <div class="card-body p-4">

            @if (isLoading)
            {
                <div class="alert alert-info text-center mt-3" role="alert">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Memuat...</span>
                    </div>
                    <p class="mt-2 mb-0">Memuat detail pesanan...</p>
                </div>
            }
            else if (orderHeader != null)
            {
                <h4 class="mb-3">Ringkasan Pesanan #@orderHeader.Id</h4>
                <div class="row mb-4">
                    <div class="col-md-6">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item"><strong>Status Pesanan:</strong> <span class="badge bg-success">@orderHeader.Status</span></li>
                            <li class="list-group-item"><strong>Tanggal Pesanan:</strong> @orderHeader.OrderDate.ToString("dd MMMM yyyy, HH:mm")</li>
                            <li class="list-group-item"><strong>Nama Pelanggan:</strong> @orderHeader.Name</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item"><strong>Email:</strong> @orderHeader.Email</li>
                            <li class="list-group-item"><strong>Telepon:</strong> @orderHeader.PhoneNumber</li>
                        </ul>
                    </div>
                </div>

                <h4 class="mb-3">Item Pesanan</h4>
                <div class="table-responsive mb-4">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Produk</th>
                                <th class="text-center">Kuantitas</th>
                                <th class="text-end">Harga Satuan</th>
                                <th class="text-end">Total Item</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (orderHeader.OrderDetails != null)
                            {
                                @foreach (var detail in orderHeader.OrderDetails)
                                {
                                    <tr>
                                        <td>
                                            @if (detail.Product != null)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <img src="@(string.IsNullOrEmpty(detail.Product.ImageUrl) ? "https://placehold.co/50x50?text=No+Img" : detail.Product.ImageUrl)"
                                                         class="img-thumbnail me-2" style="width: 50px; height: 50px; object-fit: cover;" alt="@detail.Product.Name" />
                                                    <span>@detail.Product.Name</span>
                                                </div>
                                            }
                                            else
                                            {

                                                <span>Produk tidak tersedia</span>
                                            }
                                        </td>
                                        <td class="text-center">@detail.Count</td>
                                        <td class="text-end">@detail.Price.ToString("C", CultureInfo.GetCultureInfo("id-ID"))</td>
                                        <td class="text-end">@((detail.Price * detail.Count).ToString("C", CultureInfo.GetCultureInfo("id-ID")))</td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="text-end fs-5 fw-bold">Total Pesanan:</td>
                                <td class="text-end fs-4 fw-bold text-primary">@orderHeader.OrderTotal.ToString("C", CultureInfo.GetCultureInfo("id-ID"))</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="text-center mt-4">
                    <a href="/" class="btn btn-primary btn-lg me-3"><i class="bi bi-house-door me-2"></i> Lanjut Belanja</a>
                    <a href="/order/history" class="btn btn-outline-secondary btn-lg"><i class="bi bi-list-check me-2"></i> Lihat Riwayat Pesanan</a>
                </div>
            }
            else
            {
                <div class="alert alert-danger text-center mt-3" role="alert">
                    <p class="mb-0">Gagal memuat detail pesanan atau pesanan tidak ditemukan.</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int OrderId { get; set; } // Parameter sudah benar

    private OrderHeader? orderHeader;
    private bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        // Hanya load jika ID berbeda dari yang sudah di-load
        if (orderHeader == null || orderHeader.Id != OrderId)
        {
            await LoadOrderDetailsAsync();
        }
    }

    private async Task LoadOrderDetailsAsync()
    {
        isLoading = true;
        try
        {
            // Mengambil order berdasarkan OrderId yang sudah diverifikasi
            orderHeader = await OrderRepository.GetByIdAsync(OrderId);

            if (orderHeader == null)
            {
                await JSRuntime.InvokeVoidAsync("showToastr", "error", "Detail pesanan tidak ditemukan.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading order details: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("showToastr", "error", $"Gagal memuat detail pesanan.");
        }
        finally
        {
            isLoading = false;
        }
    }
}